apiVersion: v1
kind: Namespace
metadata:
  name: podinfo-servmon
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: podinfo-servmon
  namespace: podinfo-servmon
  labels:
    release: kube-prometheus-stack
    app.kubernetes.io/name: podinfo-servmon
spec:
  endpoints:
  - path: /metrics
    port: http                    # pod port name
    interval: 15s

  # filter service namespace
  namespaceSelector:
   #any: true
    matchNames:
    - podinfo-servmon

  # filter service labels
  selector:
    matchLabels:
      app.kubernetes.io/name: podinfo-servmon
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    release: kube-prometheus-stack
  name: podinfo-servmon
  namespace: podinfo-servmon
spec:
  groups:
  - name: mygroup
    rules:
    - alert: MyAlert
      annotations:
        description: Description for MyAlert from {{ $labels.namespace }}/{{ $labels.pod }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerfailedreload
        summary: Description for MyAlert from {{ $labels.namespace }}/{{ $labels.pod }}
      expr: |-
        ## scalar (no labels)
        # vector(1) == 1

        # up (contains labels)
        # up == 0
        up{job="podinfo-servmon",namespace="podinfo-servmon"} == 1
      labels:
        severity: critical
---
apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: podinfo-servmon
  namespace: podinfo-servmon
spec:
  route:
    groupBy: ['job']
    groupWait: 1s         # wait before sending initial notification
    groupInterval: 1s     # wait before sending updated notification
    repeatInterval: 60s   # wait before repeating last notification
    receiver: 'slack-receiver'
#   routes:
#   - matchers:
#     - name: somelabelname
#       value: somelabelval
#     receiver: slack-receiver-2
  receivers:
  - name: 'slack-receiver'
    slackConfigs:
    - sendResolved: true
      #channel: '#alertmanagers' 
      apiURL:
        # secret-name and its key-name
        name: slack-receiver
        key: apiURL
      title: |-
       [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
       {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
         {{" "}}(
         {{- with .CommonLabels.Remove .GroupLabels.Names }}
           {{- range $index, $label := .SortedPairs -}}
             {{ if $index }}, {{ end }}
             {{- $label.Name }}="{{ $label.Value -}}"
           {{- end }}
         {{- end -}}
         )
       {{- end }}
      text: >-
       {{ range .Alerts -}}
       *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

       *Description:* {{ .Annotations.description }}

       *Details:*
         {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
         {{ end }}
       {{ end }}










---
apiVersion: v1
kind: Service
metadata:
  name: podinfo-servmon
  namespace: podinfo-servmon
  labels:
    app.kubernetes.io/name: podinfo-servmon
spec:
  type: ClusterIP
  ports:
    - port: 9898
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: podinfo-servmon
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podinfo-servmon
  namespace: podinfo-servmon
  labels:
    app.kubernetes.io/name: podinfo-servmon
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: podinfo-servmon
  template:
    metadata:
      labels:
        app.kubernetes.io/name: podinfo-servmon
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9898"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: podinfo-servmon
          image: "ghcr.io/stefanprodan/podinfo:6.3.0"
          imagePullPolicy: IfNotPresent
          command:
            - ./podinfo
            - --port=9898
            - --cert-path=/data/cert
            - --port-metrics=9797
            - --grpc-port=9999
            - --grpc-service-name=podinfo
            - --level=debug
            - --random-delay=false
            - --random-error=false
          env:
          - name: PODINFO_UI_COLOR
            value: "#34577c"
          ports:
            - name: http
              containerPort: 9898
              protocol: TCP
            - name: http-metrics
              containerPort: 9797
              protocol: TCP
            - name: grpc
              containerPort: 9999
              protocol: TCP
          volumeMounts:
          - name: data
            mountPath: /data
          resources:
            limits: null
            requests:
              cpu: 1m
              memory: 16Mi
      volumes:
      - name: data
        emptyDir: {}
